name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18, 20]
      fail-fast: false  # 允许其他版本继续运行，即使某个版本失败
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: 📦 Install dependencies
      run: |
        npm ci --only=production
        echo "Dependencies installed successfully"
    
    - name: 🧪 Run tests
      run: |
        echo "Running tests for Node.js ${{ matrix.node-version }}"
        npm run test
        echo "Tests completed for Node.js ${{ matrix.node-version }}"
    
    - name: 🔍 Run linting
      run: |
        echo "Running linting for Node.js ${{ matrix.node-version }}"
        npm run lint
        echo "Linting completed for Node.js ${{ matrix.node-version }}"
      continue-on-error: true  # 允许linting失败而不影响整个流程
    
    - name: 📋 Run demo
      run: |
        echo "Running demo for Node.js ${{ matrix.node-version }}"
        npm run demo
        echo "Demo completed for Node.js ${{ matrix.node-version }}"
      continue-on-error: true
    
  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: 📦 Install dependencies
      run: |
        npm ci --only=production
        echo "Dependencies installed successfully"
    
    - name: 🏗️ Build project
      run: |
        echo "Building project..."
        npm run build
        echo "Build completed successfully"
    
    - name: 📤 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          src/
          config/
          examples/
          tests/
          docs/
          package.json
          README.md
          LICENSE
        retention-days: 30
      if: success()

  deploy-docs:
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🚀 Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
        force_orphan: true
