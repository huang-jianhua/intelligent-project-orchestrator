name: Auto Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: 📦 Install dependencies
      run: npm ci --only=production
    
    - name: 🧪 Run tests
      run: npm test
    
    - name: 🏗️ Build project
      run: npm run build
    
    - name: 📦 Create release package
      run: |
        mkdir -p release-package
        cp -r src config examples tests docs package.json README.md LICENSE release-package/
        cd release-package
        tar -czf ../intelligent-project-orchestrator-${{ github.ref_name }}.tar.gz .
        cd ..
        zip -r intelligent-project-orchestrator-${{ github.ref_name }}.zip release-package/
    
    - name: 📋 Generate changelog
      id: changelog
      run: |
        if git describe --tags --abbrev=0 HEAD^ >/dev/null 2>&1; then
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^)
          echo "Previous tag: $PREV_TAG"
          CHANGELOG=$(git log --pretty=format:"- %s (%an)" $PREV_TAG..HEAD)
        else
          echo "No previous tag found, showing all commits"
          CHANGELOG=$(git log --pretty=format:"- %s (%an)" HEAD)
        fi
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: 🎉 Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: 🎭 智能项目编排系统 ${{ github.ref_name }}
        body: |
          ## 🎉 重大更新
          
          ### ✨ 新功能
          - 🆕 **运营总监角色**: 专注用户增长和数据分析
          - 📊 **增强决策算法**: 提升角色识别准确率至95%+
          - 🔄 **智能工作流**: 自动化项目流程编排
          - 📈 **性能监控**: 实时追踪团队协作效率
          
          ### 🛠️ 改进
          - ⚡ 优化角色切换速度（<500ms）
          - 🎯 提升关键词匹配精度
          - 📋 完善项目文档和API指南
          - 🔧 增强Cursor IDE集成
          - 🔄 优化CI/CD流水线和自动化部署
          
          ### 📊 性能指标
          - 角色识别准确率: >95%
          - 平均响应时间: <500ms
          - 工作流执行效率提升: 60%
          - 团队协作效率提升: 40%
          
          ### 🚀 快速开始
          ```bash
          git clone https://github.com/huang-jianhua/intelligent-project-orchestrator.git
          cd intelligent-project-orchestrator
          npm install
          npm start
          ```
          
          ### 📚 文档
          - [📖 快速开始指南](./README.md#quick-start)
          - [📋 API文档](./docs/API.md)
          - [⚙️ 配置说明](./config/roles-config.json)
          - [🌐 在线演示](https://huang-jianhua.github.io/intelligent-project-orchestrator)
          
          ### 📝 更新日志
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ---
          
          🙏 感谢所有贡献者的努力！如果您在使用过程中遇到任何问题，请通过 [Issues](https://github.com/huang-jianhua/intelligent-project-orchestrator/issues) 反馈。
        draft: false
        prerelease: false
    
    - name: 📤 Upload ZIP Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./intelligent-project-orchestrator-${{ github.ref_name }}.zip
        asset_name: intelligent-project-orchestrator-${{ github.ref_name }}.zip
        asset_content_type: application/zip
    
    - name: 📤 Upload TAR.GZ Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./intelligent-project-orchestrator-${{ github.ref_name }}.tar.gz
        asset_name: intelligent-project-orchestrator-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip 